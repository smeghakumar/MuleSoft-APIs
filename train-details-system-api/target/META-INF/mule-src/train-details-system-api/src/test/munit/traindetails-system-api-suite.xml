<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="traindetails-system-api-suite.xml" />
	<munit:test name="traindetails-system-api-main-positive-test" doc:id="55fe50a3-04f0-4ee0-8b44-eca55bb0fb3e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="2dbea07a-a739-4058-a9a1-777710c42032" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a1090fe8-197d-4f8d-b945-826883df013b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://traindetailssystemapimaintest/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://traindetailssystemapimaintest/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://traindetailssystemapimaintest/mock_variable_.dwl')]" />
						<munit-tools:variable key="origin" value="#[output application/java --- readUrl('classpath://traindetailssystemapimaintest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://traindetailssystemapimaintest/mock_variable_2.dwl')]" />
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://traindetailssystemapimaintest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="42f957d4-6b41-4241-9df4-a7fb4d3622b3" >
				<munit:payload value="#[readUrl('classpath://traindetailssystemapimaintest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://traindetailssystemapimaintest/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to traindetails-system-api-main" doc:id="478bea8c-c20d-4951-b4db-246538f6f931" name="traindetails-system-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dc8e61ae-6e00-4fa9-9583-625e6a6580bf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import traindetailssystemapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get-train-details-positive-test" doc:id="cd25bdf8-72d7-4fb6-a009-1d8e766d4c76" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock retrieve-train-details-flow" doc:id="4932a6cb-f716-4513-88a8-3b0c6c8b8e13" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="30ac4804-da51-4898-ba91-8b5052a8540f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="origin" value="#[output application/java --- readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="73c463ed-bacf-458d-83b2-e02c6a978abf" >
				<munit:payload value="#[readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://gettrainDetailstrainDetailsSystemApiConfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\trainDetails:trainDetailsSystemApiConfig" doc:id="df9f9992-a2f9-47b9-832b-77824bfc2f8a" name="get:\trainDetails:trainDetailsSystemApiConfig"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1293d61c-cb6f-4b4b-a58e-0e07c71079c7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import gettrainDetailstrainDetailsSystemApiConfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

</mule>
